name: Runtests

on:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/Runtests.yml'
      - 'src/**'
      - 'ext/**'
      - 'test/**'
      - 'Project.toml'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/CI.yml'
      - 'src/**'
      - 'ext/**'
      - 'test/**'
      - 'Project.toml'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} ${{ matrix.arch }} ( ${{ matrix.group }} )
    runs-on: ${{ matrix.os }}
    permissions: # needed to allow julia-actions/cache to delete old caches that it has created
      actions: write
      contents: read
    if: ${{ !github.event.pull_request.draft }}
    strategy:
      fail-fast: false
      matrix:
        # for Core functionalities
        julia-version:
          - '1'
          - '1.9'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
        group:
          - Core

        include:
          # for code quality
          - julia-version: '1'
            os: 'ubuntu-latest'
            arch: 'x64'
            group: 'Code_Quality'

          # for extensions
          - julia-version: '1'
            os: 'ubuntu-latest'
            arch: 'x64'
            group: 'QuantumOptics_Ext'
          - julia-version: '1'
            os: 'ubuntu-latest'
            arch: 'x64'
            group: 'QuantumToolbox_Ext'

    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          GROUP: ${{ matrix.group }}
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,ext
      - uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true